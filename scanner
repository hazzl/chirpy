#!/usr/bin/python3

import argparse
import sys
import os
import mimetypes
import urllib
from mdreader import mdreader
from mediabase import mediabase

def scan_file (path):
	url = 'file://'+urllib.parse.quote(path)
	if path.endswith('.mpc') or path.endswith('.ape'):
		type='audio'
	else:
		(type, enc) = mimetypes.guess_type(url)
	if not type:
		return None
	if not type.startswith('audio'):
		return None
	if type.endswith('x-mpegurl'):
		return None
	return mreader.read_metadata(url)

if __name__ == '__main__':
	parser = argparse.ArgumentParser()
	parser.add_argument('path', type=str, help="the media directroy to scan")
	parser.add_argument('-v','--verbose', action='store_true', help="print all tags encountered")
	args = parser.parse_args()
	mreader = mdreader()
	mbase = mediabase('chirpy.sqlite')
	mimetypes.init()
	for cdir, dirs, files in os.walk(args.path):
		for f in files:
			path = os.path.join(cdir,f)
			ctime = os.stat(path).st_ctime
			(song_id, basetime) = mbase.getCTime(path)
			if basetime < ctime:
				mobject = scan_file(path)
				if mobject:
					if args.verbose:
						for key in mobject.keys():
							print (key,"=>",mobject[key])
					mobject['ctime'] = [ctime]
					mobject['path'] = [path]
					mobject['song_id'] = song_id
					mbase.addObj(mobject)		
	mbase.deleteUnreferenced("artists","song_artists","artist_id")
	mbase.deleteUnreferenced("genres","song_genres","genre_id")
	mbase.deleteUnreferenced("albums","songs","album")
	mbase.deleteUnreferenced("categories","albums","category")
